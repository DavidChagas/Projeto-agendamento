/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Salão;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Application;
import javafx.scene.control.SpinnerValueFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DAVID
 */
public class TelaAgendamento extends javax.swing.JFrame {
    
    private DefaultTableModel modeloTable;
    /**
     * Creates new form Agendamento
     */
    public TelaAgendamento() {
        initComponents();
        
        listarClientes();
        listarServicos();

    }

    public void listarClientes() {
        Cliente c[] = new Cliente[6];
        c[0] = new Cliente(1, "João", "Masculino");
        c[1] = new Cliente(2, "Maria", "Feminino");
        c[2] = new Cliente(3, "Pedro", "Masculino");
        c[3] = new Cliente(4, "Maicon", "Masculino");
        c[4] = new Cliente(5, "Rebeca", "Masculino");
        c[5] = new Cliente(6, "Bruna", "Masculino");
        int i = 0;

        try {
            while (i < 6) {
                cxCliente.addItem(String.valueOf(c[i].getCodigo() + " - " + c[i].getNome()));
                i++;
            }
        } catch (Exception e) {

        }
    }
    
        
    private void preenche(Agendamento x){
        modeloTable = (DefaultTableModel) tabela.getModel();
        System.out.println("numero de linhas "+tabela.getRowCount());
        if(tabela.getRowCount() == 100){
        modeloTable.setRowCount(0);
        }
        
        System.out.println("quantidade de linhas: "+modeloTable.getRowCount());
        modeloTable.addRow(new Object[] {x.getC().getNome(), x.getS().getNome(), x.getDatahora(), x.getP().getNome()});
    }
    
    

    public void listarServicos() {
        Servico s[] = new Servico[4];
        s[0] = new Servico(1, "Corte Masculino");
        s[1] = new Servico(2, "Barba");
        s[2] = new Servico(3, "Corte Feminino");
        s[3] = new Servico(4, "Unhas");
        int i = 0;
        try {
            while (i < 4) {
                cxServico.addItem(String.valueOf(s[i].getCodigo() + " - " + s[i].getNome()));
                i++;
            }
        } catch (Exception e) {

        }
    }

    public void listarProfissionais(String dados) {
        Servico s[] = new Servico[5];
        s[0] = new Servico(1, "Corte Masculino");
        s[1] = new Servico(2, "Barba");
        s[2] = new Servico(3, "Corte Feminino");
        s[3] = new Servico(4, "Unhas");
        s[4] = new Servico(5, "Unhas2");

        Profissional p[] = new Profissional[6];
        p[0] = new Profissional(1, "Kaue", s[0]);
        p[1] = new Profissional(2, "Jonas", s[0]);
        p[2] = new Profissional(3, "Julia", s[2]);
        p[3] = new Profissional(4, "Luana", s[2]);
        p[4] = new Profissional(5, "Ana", s[3]);
        p[5] = new Profissional(6, "Roger", s[1]);

        //p[0] = new Profissional (1,"Kaue",s[Integer.valueOf(dados)]);
        int codservico;
        codservico = s[Integer.valueOf(dados)].getCodigo() - 1;

        int i = 0;
        try {
            while (i < 6) {
                if (p[i].getServico().getCodigo() == codservico) {
                    cxProfissional.addItem(String.valueOf(p[i].getId() + " - " + p[i].getNome()));
                    i++;
                } else {
                    i++;
                }
            }
        } catch (NumberFormatException e) {

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cxCliente = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cxServico = new javax.swing.JComboBox();
        cxProfissional = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        btnAgendar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnSair = new javax.swing.JButton();
        cxData = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        btnExcluir = new javax.swing.JToggleButton();
        btnAjuda = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cxCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Escolha" }));
        cxCliente.setToolTipText("");
        cxCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cxClienteMouseClicked(evt);
            }
        });
        cxCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxClienteActionPerformed(evt);
            }
        });

        jLabel1.setText("Cliente:");

        jLabel2.setText("Serviço:");

        jLabel3.setText("Profissional:");

        cxServico.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Escolha" }));
        cxServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxServicoActionPerformed(evt);
            }
        });

        cxProfissional.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Escolha" }));
        cxProfissional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxProfissionalActionPerformed(evt);
            }
        });

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cliente", "Serviço", "Data/Hora", "Profissional"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabelaAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(tabela);

        btnAgendar.setText("Agendar");
        btnAgendar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgendarMouseClicked(evt);
            }
        });
        btnAgendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgendarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Agendamento");

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        try {
            cxData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/#### - ##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cxData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxDataActionPerformed(evt);
            }
        });

        jLabel4.setText("Data - Hora");

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAjuda.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAjuda.setText("?");
        btnAjuda.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAjuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjudaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cxServico, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(174, 174, 174))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cxData)
                                    .addComponent(cxProfissional, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnAgendar)
                                .addGap(87, 87, 87)
                                .addComponent(btnExcluir)
                                .addGap(105, 105, 105)
                                .addComponent(btnSair)
                                .addGap(187, 187, 187)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAjuda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(295, 295, 295))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnAjuda)
                .addGap(5, 5, 5)
                .addComponent(jLabel5)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cxProfissional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cxData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cxServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgendar)
                            .addComponent(btnExcluir)
                            .addComponent(btnSair))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cxClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxClienteActionPerformed


    }//GEN-LAST:event_cxClienteActionPerformed

    private void cxServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxServicoActionPerformed
        String dados[] = String.valueOf(cxServico.getSelectedItem()).split(" - ");
        if (!dados[0].equalsIgnoreCase("Escolha")) {
            cxProfissional.removeAllItems();
            cxProfissional.addItem("Escolha");
            listarProfissionais(dados[0]);
        }
    }//GEN-LAST:event_cxServicoActionPerformed

    private void cxClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cxClienteMouseClicked


    }//GEN-LAST:event_cxClienteMouseClicked

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSairActionPerformed

    private void cxDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxDataActionPerformed

    private void btnAgendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgendarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAgendarActionPerformed

    private void btnAgendarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgendarMouseClicked
        
        
        if (cxCliente.getSelectedItem().toString() == "Escolha") {
            JOptionPane.showMessageDialog(null, "Cliente não selecionado!");
            return;
        }

        if (cxServico.getSelectedItem().toString() == "Escolha") {
            JOptionPane.showMessageDialog(null, "Serviço não selecionado!");
            return;
        }
        

        if (cxProfissional.getSelectedItem().toString() == "Escolha") {
            JOptionPane.showMessageDialog(null, "Profissional não selecionado!");
            return;
        };
            String data4 = cxData.getText().toString();
            System.out.println("data e horaaa"+ data4);
        if (data4 == "  /  /     -   :   ") {
            JOptionPane.showMessageDialog(null, "Data/Hora não selecionado!");
            return;
        };
        

        Agendamento ag = new Agendamento();
        
        Cliente c[] = new Cliente[6];
        c[0] = new Cliente(1, "João", "Masculino");
        c[1] = new Cliente(2, "Maria", "Feminino");
        c[2] = new Cliente(3, "Pedro", "Masculino");
        c[3] = new Cliente(4, "Maicon", "Masculino");
        c[4] = new Cliente(5, "Rebeca", "Masculino");
        c[5] = new Cliente(6, "Bruna", "Masculino");

        Servico s[] = new Servico[5];
        s[0] = new Servico(1, "Corte Masculino");
        s[1] = new Servico(2, "Barba");
        s[2] = new Servico(3, "Corte Feminino");
        s[3] = new Servico(4, "Unhas");
        s[4] = new Servico(5, "Unhas2");

        Profissional p[] = new Profissional[6];
        p[0] = new Profissional(1, "Kaue", s[0]);
        p[1] = new Profissional(2, "Jonas", s[0]);
        p[2] = new Profissional(3, "Julia", s[2]);
        p[3] = new Profissional(4, "Luana", s[2]);
        p[4] = new Profissional(5, "Ana", s[3]);
        p[5] = new Profissional(6, "Roger", s[1]);

        
        for (int i = 0; i < 6; i++) {
            String cliente = (c[i].getCodigo() + " - " + c[i].getNome());
            String cxcliente = cxCliente.getSelectedItem().toString();
            if (cliente.equalsIgnoreCase(cxcliente)){
                ag.setC(c[i]);
                System.out.println("cliente selecionado "+ ag.getC().getNome());
                break;
            }
        }
        
        for (int j = 0; j < 5; j++) {
            String servico = (s[j].getCodigo() + " - " + s[j].getNome());
            String cxservico = cxServico.getSelectedItem().toString();
            if (servico.equalsIgnoreCase(cxservico)) {
                ag.setS(s[j]);
                System.out.println("serviço selecionado "+ ag.getS().getNome());
                break;
            }
        }
        
        for (int k = 0; k < 6; k++) {
            String profissional = (p[k].getId() + " - " + p[k].getNome());
            String cxprofissional = cxProfissional.getSelectedItem().toString();
            if (profissional.equalsIgnoreCase(cxprofissional)) {
                ag.setP(p[k]);
                System.out.println("profissional selecionado "+ ag.getP().getNome());
                break;
            }
        }
        
        String data = cxData.getText();
        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy - HH:mm");
        try {
            Date data2 = df.parse(data);
            ag.setDatahora(data);
            System.out.println("data selecionada "+data);
            preenche(ag);
            cxCliente.setSelectedItem("Escolha");
            cxServico.setSelectedItem("Escolha");
            cxProfissional.setSelectedItem("Escolha");
            cxData.setValue(null);
        } catch (ParseException ex) {
            Logger.getLogger(TelaAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_btnAgendarMouseClicked

    private void btnAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjudaActionPerformed
        Tutorial t = new Tutorial();
        t.statusTutorial(true);
    }//GEN-LAST:event_btnAjudaActionPerformed

    private void cxProfissionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxProfissionalActionPerformed
        
    }//GEN-LAST:event_cxProfissionalActionPerformed

    private void tabelaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabelaAncestorAdded
            
    }//GEN-LAST:event_tabelaAncestorAdded

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        modeloTable = (DefaultTableModel)tabela.getModel();
        if (tabela.getSelectedRow() >= 0){
            modeloTable.removeRow(tabela.getSelectedRow());
            tabela.setModel(modeloTable);
        }else{
            JOptionPane.showMessageDialog(null, "Favor selecionar uma linha");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAgendamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgendar;
    private javax.swing.JButton btnAjuda;
    private javax.swing.JToggleButton btnExcluir;
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox cxCliente;
    private javax.swing.JFormattedTextField cxData;
    private javax.swing.JComboBox cxProfissional;
    private javax.swing.JComboBox cxServico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables

}
